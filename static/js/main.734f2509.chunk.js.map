{"version":3,"sources":["firebase/config.js","firebase/useFirestore.js","body/ImageGrid.js","body/Modal.js","body/Title.js","firebase/useStorage.js","body/ProgressBar.js","body/Upload.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useFirestore","collection","useState","docs","setDocs","useEffect","unsub","orderBy","onSnapshot","snap","documents","forEach","doc","push","data","id","ImageGrid","setselectedImg","farFaHeart","heart","setHeart","console","log","className","map","onClick","url","src","alt","fasFaHeart","icon","style","color","Modal","selectedImg","e","target","classList","contains","Title","useStorage","file","progress","setProgress","error","setError","setUrl","storageRef","ref","name","collectionRef","put","on","parcentage","bytesTransferred","totalBytes","err","a","getDownloadURL","createdAt","add","ProgressBar","setFile","width","Upload","types","type","onChange","selected","files","includes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.734f2509.chunk.js","sourcesContent":["import firebase from 'firebase';\nimport 'firebase/storage';\nimport 'firebase/firestore';\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyDhivUAzO1-ShTvE_28WJevFH0ANP3rV3g\",\n    authDomain: \"react-wallpaper-74d74.firebaseapp.com\",\n    projectId: \"react-wallpaper-74d74\",\n    storageBucket: \"react-wallpaper-74d74.appspot.com\",\n    messagingSenderId: \"1027156409569\",\n    appId: \"1:1027156409569:web:4ec5d1d36bbff38a5ecba0\"\n  };\n  \n  firebase.initializeApp(firebaseConfig);\n\n  const projectStorage = firebase.storage();\n  const projectFirestore = firebase.firestore();\n  const timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport{projectStorage, projectFirestore, timestamp};\n   ","import {useState, useEffect} from 'react';\nimport {projectFirestore} from './config'\n\nconst useFirestore = (collection) => {\n    const [docs, setDocs] = useState([]);\n\n    useEffect(()=>{\n        const unsub = projectFirestore.collection(collection)\n            .orderBy('createdAt', 'desc')\n            .onSnapshot((snap) => {\n                let documents = [];\n                snap.forEach(doc => {\n                    documents.push({...doc.data(), id: doc.id});\n                });\n                setDocs(documents);\n            });\n        return () => unsub();\n    }, [collection])\n    return {docs};\n}\nexport default useFirestore;","import React,{ useState} from 'react';\nimport useFirestore from '../firebase/useFirestore';\nimport { faHeart as fasFaHeart} from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as farFaHeart} from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst ImageGrid = ({setselectedImg}) => {\n    const [heart, setHeart] = useState(farFaHeart);\n    const {docs} = useFirestore('images');\n    console.log(docs);\n\n    const changeColor = (e) => {\n        if (heart==farFaHeart) {\n            setHeart(fasFaHeart);\n        }else{\n            setHeart(farFaHeart)\n        }\n    }\n\n    return(\n        <div className=\"img-grid\">\n            {docs && docs.map(doc =>(\n                <div className=\"img-wrap\" key={doc.id}>\n                    <img onClick={() => setselectedImg(doc.url)} src={doc.url} alt=\"uploaded pic\"></img>\n                    <br></br>\n                    <div>\n                        <FontAwesomeIcon\n                            className=\"like\" \n                            onClick={() => {\n                                changeColor();\n                            }}\n                            icon={heart} style={{color: 'red'}}/>\n                    </div>\n                </div>\n            ))}\n        </div>\n    )\n}\nexport default ImageGrid;","import React from 'react';\n\nconst Modal = ({selectedImg, setselectedImg}) => {\n    const handleClick = (e) => {\n        if(e.target.classList.contains('backdrop')){\n            setselectedImg(null);\n        }\n    }\n    return(\n        <div className=\"backdrop\" onClick={handleClick}>\n            <img src={selectedImg} alt=\"selected img\"></img>\n        </div>\n    )\n}\nexport default Modal;","import React from 'react';\n\nfunction Title() {\n    return(\n        <div className=\"title\">\n            <h1>Wallpaper for programmers</h1>\n            <p>Here you can download or upload any wallpaper you like</p>\n        </div>\n    )\n}\nexport default Title;","import {useState, useEffect} from 'react';\nimport {projectStorage, projectFirestore, timestamp} from './config'\n\nconst useStorage = (file) => {\n    const [progress, setProgress] = useState(0);\n    const [error, setError] = useState(null);\n    const [url, setUrl] = useState(null);\n\n    useEffect(() => {\n        const storageRef = projectStorage.ref(file.name);\n        const collectionRef = projectFirestore.collection('images');\n\n\n        storageRef.put(file).on('state_changed', (snap) => {\n            let parcentage = (snap.bytesTransferred / snap.totalBytes) * 100;\n            setProgress(parcentage);\n        }, (err) => {\n            setError(err);\n        }, async() => {\n            const url = await storageRef.getDownloadURL();\n            const createdAt = timestamp();\n            collectionRef.add({url, createdAt});\n            setUrl(url);\n        })\n    }, [file]);\n\n    return { progress, url, error }\n}\nexport default useStorage;","import React, { useEffect } from 'react';\nimport useStorage from '../firebase/useStorage';\n\nconst ProgressBar = ({file, setFile}) =>{\n    const {url, progress} = useStorage(file);\n    \n    useEffect(() => {\n        if(url){\n            setFile(null);\n        }\n    }, [url, setFile])\n\n    return(\n        <div className=\"progress-bar\" style={{ width: progress +'%'}}></div>\n    )\n}\nexport default ProgressBar;","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nfunction Upload(){\n    const [file, setFile] = useState(null);\n    const [error, setError] = useState(null);\n\n    const types = [\"image/png\", \"image/jpeg\"];\n\n    const changeHandler = (e) =>{\n        let selected = e.target.files[0];\n        if(selected && types.includes(selected.type)){\n            setFile(selected);\n            setError(\"\");\n        }else{\n            setFile(null);\n            setError('Please select an image file (png or jpeg)');\n        }\n    }\n    return(\n        <form>\n            <label>\n                <input type=\"file\" onChange={changeHandler}></input>\n                <span>+</span>\n            </label>\n            <div className=\"output\">\n                {error && <div className=\"error\">{error}</div>}\n                {file && <div>{file.name}</div>}\n                {file && <ProgressBar file = {file} setFile = {setFile}/>}\n            </div>\n        </form>\n    )\n}\nexport default Upload;","import React, { useState } from 'react';\nimport ImageGrid from './body/ImageGrid';\nimport Modal from './body/Modal';\nimport Title from './body/Title';\nimport Upload from './body/Upload';\n\nfunction App() {\n  const [selectedImg, setselectedImg] = useState(null);\n  \n  return (\n    <div className=\"App\">\n      <Title/>\n      <Upload/>\n      <ImageGrid setselectedImg = {setselectedImg}/>\n      { selectedImg && <Modal selectedImg = {selectedImg} setselectedImg = {setselectedImg}/>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}